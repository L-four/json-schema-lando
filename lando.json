{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the app used in local urls",
      "examples": [
        "my-first-app"
      ]
    },
    "compose": {
      "type": "array"
    },
    "env_file": {
      "type": "array"
    },
    "events": {
      "type": "object",
      "properties": {
        "pre-destroy": {
          "$ref": "#/definitions/event"
        },
        "post-destroy": {
          "$ref": "#/definitions/event"
        },
        "pre-init": {
          "$ref": "#/definitions/event"
        },
        "post-init": {
          "$ref": "#/definitions/event"
        },
        "pre-rebuild": {
          "$ref": "#/definitions/event"
        },
        "post-rebuild": {
          "$ref": "#/definitions/event"
        },
        "pre-restart": {
          "$ref": "#/definitions/event"
        },
        "post-restart": {
          "$ref": "#/definitions/event"
        },
        "pre-start": {
          "$ref": "#/definitions/event"
        },
        "post-start": {
          "$ref": "#/definitions/event"
        },
        "pre-stop": {
          "$ref": "#/definitions/event"
        },
        "post-stop": {
          "$ref": "#/definitions/event"
        },
        "pre-uninstall": {
          "$ref": "#/definitions/event"
        },
        "post-uninstall": {
          "$ref": "#/definitions/event"
        }
      }
    },
    "post-start": {
      "type": "array"
    },
    "recipe": {
      "type": "string",
      "enum": [
        "backdrop",
        "lamp",
        "lemp",
        "mean",
        "drupal6",
        "drupal7",
        "drupal8",
        "joomla",
        "wordpress",
        "laravel",
        "pantheon"
      ]
    },
    "config": {
      "oneOf": [
        {
          "$ref": "#/definitions/recipe_config_drupal8"
        },
        {
          "$ref": "#/definitions/recipe_config_lemp"
        }
      ]
    },
    "proxy": {
      "type": "object"
    },
    "services": {
      "$ref": "#/definitions/services"
    },
    "tooling": {
      "$ref": "#/definitions/tooling"
    }
  },
  "definitions": {
    "recipe_config_drupal8": {
      "allOf": [
        {
          "$ref": "#/definitions/recipe_config_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "drush": {
          "type": "string",
          "examples": [
            "^8",
            "^7",
            "*"
          ]
        }
      }
    },
    "recipe_config_lemp": {
      "allOf": [
        {
          "$ref": "#/definitions/recipe_config_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "config": {
          "type": "object",
          "properties": {
            "server": {
              "type": "string",
              "default": "config/nginx.conf.tpl",
              "examples": [
                "config/nginx.conf.tpl"
              ]
            },
            "vhosts": {
              "type": "string",
              "default": "config/default.conf.tpl",
              "examples": [
                "config/default.conf.tpl"
              ]
            },
            "param": {
              "type": "string",
              "default": "config/fastcgi_params",
              "examples": [
                "config/fastcgi_params"
              ]
            }
          }
        }
      }
    },
    "event": {
      "oneOf": [
        {
          "$ref": "#/definitions/script"
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "patternProperties": {
              "": {
                "$ref": "#/definitions/script"
              }
            },
            "additionalProperties": false
          }
        }
      ]
    },
    "script": {
      "description": "Shell script",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "program": {
      "description": "program",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "services": {
      "patternProperties": {
        "": {
          "oneOf": [
            {
              "$ref": "#/definitions/service_node"
            },
            {
              "$ref": "#/definitions/service_mailhog"
            },
            {
              "$ref": "#/definitions/service_mariadb"
            },
            {
              "$ref": "#/definitions/service_phpmyadmin"
            },
            {
              "$ref": "#/definitions/service_nginx"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "service_nginx": {
      "allOf": [
        {
          "$ref": "#/definitions/service_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "nginx(:.*)?"
        },
        "webroot": {
          "type": "string",
          "default": "."
        },
        "ssl": {
          "type": "boolean"
        },
        "config": {
          "type": "object",
          "properties": {
            "server": {
              "type": "string",
              "default": "config/nginx.conf.tpl",
              "examples": [
                "config/nginx.conf.tpl"
              ]
            },
            "vhosts": {
              "type": "string",
              "default": "config/default.conf.tpl",
              "examples": [
                "config/default.conf.tpl"
              ]
            },
            "param": {
              "type": "string",
              "default": "config/fastcgi_params",
              "examples": [
                "config/fastcgi_params"
              ]
            }
          }
        }
      }
    },
    "service_mariadb": {
      "allOf": [
        {
          "$ref": "#/definitions/service_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "mariadb(:.*)?"
        },
        "creds": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "database": {
              "type": "string"
            }
          }
        },
        "config": {
          "type": "object",
          "properties": {
            "database": {
              "type": "string"
            }
          }
        }
      }
    },
    "service_phpmyadmin": {
      "allOf": [
        {
          "$ref": "#/definitions/service_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "phpmyadmin(:.*)?"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "database",
              "database_2",
              "mysql"
            ]
          ]
        },
        "config": {
          "type": "object",
          "properties": {
            "config": {
              "type": "string",
              "examples": [
                "config/config.user.inc.php"
              ]
            }
          }
        }
      }
    },
    "service_mailhog": {
      "allOf": [
        {
          "$ref": "#/definitions/service_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "mailhog(:.*)?"
        },
        "hogfrom": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "service_node": {
      "allOf": [
        {
          "$ref": "#/definitions/service_base"
        }
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "node(:.*)?"
        },
        "globals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "service_base": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "$ref": "#/definitions/services_type"
        },
        "overrides": {
          "$ref": "#/definitions/services_overrides"
        },
        "build": {
          "$ref": "#/definitions/script"
        },
        "build_as_root": {
          "$ref": "#/definitions/script"
        },
        "run": {
          "$ref": "#/definitions/script"
        },
        "run_as_root": {
          "$ref": "#/definitions/script"
        },
        "ssl": {
          "type": "boolean"
        },
        "command": {
          "$ref": "#/definitions/script"
        },
        "port": {
          "type": "integer"
        },
        "moreHttpPorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portforward": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "scanner": {
          "type": "boolean"
        }
      }
    },
    "services_type": {
      "examples": [
        "some-service:with-optional-version"
      ],
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "string",
          "enum": [
            "apache",
            "custom",
            "dotnet",
            "elasticsearch",
            "go",
            "mailhog",
            "mariadb",
            "memcached",
            "mongo",
            "mssql",
            "mysql",
            "nginx",
            "node",
            "php",
            "phpmyadmin",
            "postgres",
            "python",
            "redis",
            "ruby",
            "solr",
            "tomcat",
            "varnish",
            "Build Step"
          ]
        }
      ]
    },
    "services_overrides": {
      "properties": {
        "environment": {
          "patternProperties": {
            "": {
              "type": "string",
              "examples": [
                {
                  "STUFF": "THINGS",
                  "THINGS": "GUYS"
                }
              ]
            }
          }
        },
        "image": {
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": ".*:.*",
            "examples": [
              "./mythings:/tmp/mythings"
            ]
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "8888"
            ]
          ]
        }
      }
    },
    "tooling": {
      "patternProperties": {
        "": {
          "type": "object",
          "properties": {
            "cmd": {
              "$ref": "#/definitions/program"
            },
            "description": {
              "type": "string"
            },
            "service": {
              "type": "string",
              "default": "appserver"
            },
            "user": {
              "type": "string"
            },
            "options": {
              "patternProperties": {
                "": {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "string"
                    },
                    "describe": {
                      "type": "string"
                    },
                    "passthrough": {
                      "type": "boolean"
                    },
                    "alias": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "interactive": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "input"
                          ]
                        },
                        "message": {
                          "type": "string"
                        },
                        "default": {
                          "type": "string"
                        },
                        "weight": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "recipe_config_base": {
      "properties": {
        "php": {
          "type": "string",
          "pattern": "[0-9]+(\\.[0-9]+){1,2}",
          "default": "7.4"
        },
        "via": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "enum": [
                "nginx",
                "apache"
              ]
            }
          ],
          "default": "apache"
        },
        "webroot": {
          "type": "string",
          "default": "."
        },
        "database": {
          "type": "string",
          "default": "mysql"
        },
        "xdebug": {
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/config_files"
        }
      }
    },
    "config_files": {
      "database": {
        "type": "string",
        "examples": [
          "config/my-custom.cnf"
        ]
      },
      "php": {
        "type": "string",
        "examples": [
          "config/php.ini"
        ]
      },
      "server": {
        "type": "string",
        "examples": [
          "config/server.conf"
        ]
      },
      "vhosts": {
        "type": "string",
        "examples": [
          "config/default.conf"
        ]
      }
    }
  }
}